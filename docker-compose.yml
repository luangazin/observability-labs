services:
  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.127.0
    container_name: otel-collector
    command: ["--config", "/etc/otel-collector-config.yaml"]
    volumes:
      - ./tmp/logs/TMS:/var/log/tms
      - ./tmp/logs/NGINX:/var/log/nginx
      - ./configs/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "8888:8888" # Metrics
      - "8889:8889" # Prometheus exposition
      - "13133:13133" # Health check
    depends_on:
      - loki
    networks:
      observability-network:
        aliases:
          - otel-collector-alias.127.0.0.1.nip.io
  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.69.0
    container_name: jaeger
    ports:
      - "16686:16686" # Web UI
      - "14250:14250" # Model used by jaeger
      - "14268:14268" # HTTP Thrift
      - "14269:14269" # Health check
      - "6831:6831/udp" # Thrift compact
      - "6832:6832/udp" # Thrift binary
      - "5778:5778" # Configurations
    networks:
      - observability-network

  # Prometheus
  prometheus:
    image: prom/prometheus:v3.4.0
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
    volumes:
      - ./configs/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - observability-network

  # Grafana
  grafana:
    image: grafana/grafana:12.0.1-ubuntu
    container_name: grafana
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
    networks:
      - observability-network

  # Loki
  loki:
    image: grafana/loki:3.5
    container_name: loki
    user: root
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 10s
      retries: 6
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - ./configs/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    networks:
      - observability-network

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  observability-network:
    name: observability-network
    driver: bridge
