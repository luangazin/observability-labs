
services:
  # nodejs-app:
  #   build:
  #     context: ./nodejs-sample
  #     dockerfile: Dockerfile
  #   container_name: nodejs-app
  #   environment:
  #     - PORT=8080
  #     - SERVICE_NAME=nodejs-sample
  #     - OTLP_TRACE_EXPORTER=http://otel-collector:4318/v1/traces
  #     - OTLP_METRIC_EXPORTER=http://otel-collector:4318/v1/metrics
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - otel-collector

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.126.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./configs/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8888:8888"   # Metrics
      - "8889:8889"   # Prometheus exposition
      - "13133:13133" # Health check
    depends_on:
      - jaeger
      - prometheus

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.69.0
    container_name: jaeger
    ports:
      - "16686:16686"   # Web UI
      - "14250:14250"   # Model used by jaeger
      - "14268:14268"   # HTTP Thrift
      - "14269:14269"   # Health check
      - "6831:6831/udp" # Thrift compact
      - "6832:6832/udp" # Thrift binary
      - "5778:5778"     # Configurations

  # Prometheus
  prometheus:
    image: prom/prometheus:v3.4.0
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./configs/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  # Grafana
  grafana:
    image: grafana/grafana:12.0.0-ubuntu
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data: